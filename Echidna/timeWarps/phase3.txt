drop trigger if exists instructor_schedule_check;
drop trigger if exists interim_mod_check;
drop trigger if exists section_increment;
drop trigger if exists instructor_id_increment;
drop trigger if exists cluster_increment;

drop table if exists teaches;
drop table if exists course_offering;
drop table if exists course;
drop table if exists instructor;
drop table if exists mod_table;

SET storage_engine=InnoDB;


create table course
	(course_id		varchar(6) not null, 
	 title			varchar(50) not null, 
	 dept_name		varchar(20),
	num_credits		decimal(2,1) check (num_credits >= 0),
	cluster_id		integer,
	 primary key (course_id)
	);
create index course_credits on course(course_id, num_credits);

create table instructor
	(instructor_id			decimal(8,0) check (instructor_id >= 0), 
	 first_name			varchar(50) not null, 
 last_name			varchar(50) not null, 
 email 			varchar(60) not null,
	 dept_name		varchar(20) not null, 
	desired_load_min		decimal(3,1) not null check (desired_load_min >= 0),
	desired_load_max		decimal(3,1) not null check (desired_load_max >= desired_load_min),
	 primary key (instructor_id)
	);

create table course_offering 
(course_id 			varchar(6) not null, 
course_type 			varchar(50) not null, 
semester 			enum('Fall','Interim','Spring', 'Summer'), 
year 				decimal(4,0) not null check (year >= 1776), 
section_num 			integer check (section_num >= 0), 
num_credits 			decimal(2,1), 
TEU_value 			decimal(3,1) check (TEU_value >=0),
 
primary key (course_id, course_type, semester, year, section_num), 
foreign key(course_id, num_credits) references course(course_id, num_credits) on update cascade);


create table mod_table
	(mod_name		varchar(3) not null,
	start_time		time(0),
end_time		time(0),
mod_credits		decimal(1, 0) check (mod_credits >= 3 and mod_credits <= 4),
days_of_week		varchar(5),
primary key (mod_name, mod_credits)
);


create table teaches 

(instructor_id 			decimal(8,0) check (instructor_id >= 0), 
course_id 			varchar(6) not null, 
course_type 			varchar(50) not null, 
semester 			enum('fall','interim','spring', 'summer'), 
year 				decimal (4,0) check (year >= 1776), 
section_num 			integer, 
mod_name 			varchar(3), 
mod_credits 			decimal(1, 0) check (mod_credits >= 3 and mod_credits <= 4), 

primary key(instructor_id, course_id, course_type, semester, year, section_num), 
foreign key fk1 (course_id, course_type, semester, year, section_num) 
references course_offering (course_id, course_type, semester, year, section_num) on update cascade on delete cascade, 
foreign key fk2 (instructor_id) references instructor (instructor_id) on update cascade on delete cascade, 
foreign key fk3  (mod_name, mod_credits) references mod_table (mod_name, mod_credits) on update cascade on delete set null);


delimiter $$

create trigger interim_mod_check after insert on teaches
for each row BEGIN
	if (NEW.mod_name = 'AA' and NEW.semester != 'Interim')
	then
            	signal sqlstate value '45000';
	elseif (NEW.mod_name = 'BB' and NEW.semester != 'Interim')
	then
        		signal sqlstate value '45000';
	elseif (NEW.semester = 'Interim' and
(NEW.mod_name != 'AA' and NEW.mod_name != 'BB'
and NEW.mod_name != 'OL'))
	then
    		signal sqlstate value '45000';
	end if;
end $$


create trigger instructor_schedule_check before insert on teaches
for each row BEGIN
	if ( (NEW.instructor_id, NEW.course_type, NEW.semester, NEW.year, NEW.mod_name) in (select instructor_id, course_type, semester, year, mod_name from teaches where mod_name != 'OL') )
	then 
		signal sqlstate value '45000' set message_text =  'Instructor has been double scheduled!';
	end if;
end $$

create trigger section_increment before insert on course_offering
for each row BEGIN
	while ( (NEW.course_id, NEW.course_type, NEW.semester, NEW.year, NEW.section_num) in (select course_id, course_type, semester, year, section_num from course_offering) )
	do
		set NEW.section_num = NEW.section_num + 1;
	end while;
end $$



create trigger instructor_id_increment before insert on instructor
for each row BEGIN
	while ( (NEW.instructor_id) in (select instructor_id from instructor) )
	do
		set NEW.instructor_id = NEW.instructor_id + 1;
	end while;
end $$

create trigger cluster_increment before insert on course
for each row BEGIN
	if (NEW.cluster_id is not null)
  then
    while ( (NEW.cluster_id) in (select cluster_id from course) )
		do
			set NEW.cluster_id = NEW.cluster_id + 1;
		end while;
	end if;
end $$

delimiter ;


insert into instructor values(10000001, 'John', 'Smith', 'jsmith@college.edu', 'MathCs', 23.5, 23.8);
insert into instructor values(10000002, 'Joe', 'Biden', 'jbiden@college.edu', 'MathCs', 23.5, 23.8);
insert into instructor values(10000003, 'Tom', 'Holland', 'tholland@college.edu', 'MathCs', 23.5, 23.8);
insert into instructor values(10000004, 'Donald', 'Trump', 'dtrump@college.edu', 'MathCs', 23.5, 23.8);
insert into instructor values(10000005, 'Alvin', 'Kamara', 'akamara@college.edu', 'MathCs', 23.5, 23.8);
insert into instructor values(10000006, 'John', 'Cena', 'jcena@college.edu', 'MathCs', 23.5, 23.8);
insert into instructor values(10000007, 'Kirk', 'Cousins', 'kcousins@college.edu', 'MathCs', 23.5, 23.8);
insert into instructor values(10000008, 'Xin', 'HuaShi', 'xhuashi@college.edu', 'MathCs', 23.5, 23.8);
insert into instructor values(10000009, 'Rafael', 'Nadal', 'rdadal@college.edu', 'MathCs', 23.5, 23.8);
insert into instructor values(10000010, 'Sally', 'Smith', 'ssmith@college.edu', 'MathCs', 23.5, 23.8);

insert into course values('COS100', 'Intro to Programming', 'MathCs', 3, NULL);
insert into course values('COS105', 'Object-oriented Design and Programming', 'MathCs', 4, NULL);
insert into course values('COS205', 'Scientific Computing', 'MathCs', 3, NULL);
insert into course values('COS212', 'Data Structures', 'MathCs', 4, NULL);
insert into course values('COS214', 'Computer Architecture', 'MathCs', 4, NULL);
insert into course values('COS216', 'Algorithms and Advanced Data Structures', 'MathCs', 3, NULL);
insert into course values('COS235', 'Computer Systems', 'MathCs', 4, NULL);
insert into course values('COS301', 'Operating Systems', 'MathCs', 4, NULL);
insert into course values('COS313', 'Database Systems', 'MathCs', 3, NULL);
insert into course values('COS318', 'Web Programming', 'MathCs', 3, NULL);
insert into course values('COS320', 'Computer Graphics Programming', 'MathCs', 3, NULL);
insert into course values('COS334', 'Data Mining and Machine Learning', 'MathCs', 3, NULL);
insert into course values('COS335', 'Computer Security', 'MathCs', 3, NULL);
insert into course values('COS351', 'High Performance Computing', 'MathCs', 3, NULL);
insert into course values('COS371', 'Organization of Programming Languages', 'MathCs', 3, NULL);
insert into course values('MAT101', 'Math for the 21st Century', 'MathCs', 3, NULL);
insert into course values('MAT102', 'Creative Problem Solving', 'MathCs', 3, NULL);
insert into course values('MAT123', 'Precalculus', 'MathCs', 3, NULL);
insert into course values('MAT124', 'Calculus 1', 'MathCs', 3, NULL);
insert into course values('MAT125', 'Calculus 2', 'MathCs', 3, NULL);
insert into course values('MAT201', 'Mathematics for Elementary Education 1', 'MathCs', 3, NULL);
insert into course values('MAT202', 'Mathematics for Elementary Education 2', 'MathCs', 3, NULL);
insert into course values('MAT207', 'Statistical Analysis', 'MathCs', 3, NULL);
insert into course values('MAT209', 'Financial Mathematics', 'MathCs', 3, NULL);
insert into course values('MAT211', 'Linear Algebra', 'MathCs', 3, NULL);
insert into course values('MAT222', 'Differential Equations', 'MathCs', 3, NULL);
insert into course values('MAT223', 'Multivariable Calculus', 'MathCs', 3, NULL);
insert into course values('MAT241', 'Discrete Mathematics', 'MathCs', 3, NULL);
insert into course values('MAT330', 'Probability and Statistics', 'MathCs', 3, NULL);
insert into course values('MAT376', 'Operations Research', 'MathCs', 3, NULL);
insert into course values('MAT422', 'Real Analysis', 'MathCs', 4, NULL);
insert into course values('MAT499', 'Foundations of Mathematics', 'MathCs', 3, NULL);
insert into course values('NIL000', 'Non-Instructional Load', 'General', NULL, NULL);


insert into course_offering values('COS100', 'InPerson', 'Fall', 2020, 1 , 3 , 3.4);
insert into course_offering values('COS100', 'InPerson', 'Fall', 2020, 2 , 3 , 3.4);
insert into course_offering values('COS100', 'InPerson', 'Interim', 2021, 1 , 3 , 3.4);
insert into course_offering values('COS100', 'InPerson', 'Spring', 2021, 1 , 3 , 3.4);
insert into course_offering values('COS105', 'InPerson', 'Spring', 2021, 1 , 4 , 3.4);
insert into course_offering values('COS105', 'InPerson', 'Fall', 2020, 1 , 4 , 3.4);
insert into course_offering values('COS105', 'Online', 'Spring', 2021, 2 , 4 , 3.4);
insert into course_offering values('COS205', 'InPerson', 'Fall', 2020, 1 , 3 , 3.4);
insert into course_offering values('COS205', 'InPerson', 'Spring', 2021, 1 , 3 , 3.4);
insert into course_offering values('COS212', 'InPerson', 'Fall', 2020, 1 , 4 , 3.4);
insert into course_offering values('COS212', 'InPerson', 'Spring', 2021, 1 , 4 , 3.4);
insert into course_offering values('COS214', 'InPerson', 'Fall', 2020, 1, 4, 3.4);
insert into course_offering values('COS214', 'InPerson', 'Spring', 2021, 1, 4, 3.4);
insert into course_offering values('COS214', 'InPerson', 'Spring', 2021, 2, 4, 3.4);
insert into course_offering values('COS216', 'InPerson', 'Spring', 2021, 1, 3, 3.4);
insert into course_offering values('COS216', 'InPerson', 'Spring', 2021, 2, 3, 3.4);
insert into course_offering values('COS216', 'InPerson', 'Spring', 2021, 3, 3, 3.4);
insert into course_offering values('COS235', 'Online', 'Spring', 2021, 1, 4, 3.4);
insert into course_offering values('COS301', 'InPerson', 'Fall', 2020, 1, 4, 3.4);
insert into course_offering values('COS301', 'InPerson', 'Fall', 2020, 2, 4, 3.4);
insert into course_offering values('COS313', 'InPerson', 'Fall', 2020, 1, 3, 3.4);
insert into course_offering values('COS313', 'InPerson', 'Fall', 2020, 2, 3, 3.4);
insert into course_offering values('COS318', 'InPerson', 'Spring', 2021, 1, 3, 3.4);
insert into course_offering values('COS318', 'InPerson', 'Spring', 2021, 2, 3, 3.4);
insert into course_offering values('COS320', 'Online', 'Interim', 2021, 1, 3, 3.4);
insert into course_offering values('COS334', 'InPerson', 'Spring', 2021, 1, 3, 3.4);
insert into course_offering values('COS334', 'InPerson', 'Spring', 2021, 2, 3, 3.4);
insert into course_offering values('COS335', 'InPerson', 'Fall', 2020, 1, 3, 3.4);
insert into course_offering values('COS335', 'InPerson', 'Fall', 2020, 2, 3, 3.4);
insert into course_offering values('COS351', 'InPerson', 'Interim', 2021, 1, 3, 3.4);
insert into course_offering values('COS371', 'InPerson', 'Spring', 2021, 1, 3, 3.4);
insert into course_offering values('COS371', 'InPerson', 'Spring', 2021, 2, 3, 3.4);
insert into course_offering values('MAT101', 'InPerson', 'Interim', 2021, 1, 3, 3.4);
insert into course_offering values('MAT101', 'InPerson', 'Fall', 2020, 1, 3, 3.4);
insert into course_offering values('MAT101', 'InPerson', 'Spring', 2021, 1, 3, 3.4);
insert into course_offering values('MAT102', 'Online', 'Fall', 2020, 1, 3, 3.4);
insert into course_offering values('MAT102', 'InPerson', 'Fall', 2020, 2, 3, 3.4);
insert into course_offering values('MAT102', 'InPerson', 'Spring', 2021, 1, 3, 3.4);
insert into course_offering values('MAT124', 'InPerson', 'Fall', 2020, 1, 3, 3.4);
insert into course_offering values('MAT124', 'InPerson', 'Fall', 2020, 2, 3, 3.4);
insert into course_offering values('MAT124', 'InPerson', 'Spring', 2021, 1, 3, 3.4);
insert into course_offering values('MAT125', 'InPerson', 'Fall', 2020, 1, 3, 3.4);
insert into course_offering values('MAT125', 'InPerson', 'Spring', 2021, 1, 3, 3.4);
insert into course_offering values('MAT125', 'InPerson', 'Spring', 2021, 2, 3, 3.4);
insert into course_offering values('MAT207', 'InPerson', 'Spring', 2021, 1, 3, 3.4);
insert into course_offering values('MAT207', 'Online', 'Spring', 2021, 2, 3, 3.4);
insert into course_offering values('MAT207', 'InPerson', 'Fall', 2020, 1, 3, 3.4);
insert into course_offering values('MAT209', 'InPerson', 'Fall', 2020, 1, 3, 3.4);
insert into course_offering values('MAT209', 'InPerson', 'Spring', 2021, 1, 3, 3.4);
insert into course_offering values('MAT211', 'InPerson', 'Spring', 2021, 1, 3, 3.4);
insert into course_offering values('MAT211', 'InPerson', 'Spring', 2021, 2, 3, 3.4);
insert into course_offering values('MAT222', 'InPerson', 'Fall', 2020, 1, 3, 3.4);
insert into course_offering values('MAT222', 'Online', 'Spring', 2021, 3, 3, 3.4);
insert into course_offering values('MAT222', 'InPerson', 'Spring', 2021, 1, 3, 3.4);
insert into course_offering values('MAT222', 'InPerson', 'Spring', 2021, 2, 3, 3.4);
insert into course_offering values('MAT223', 'InPerson', 'Fall', 2020, 1, 3, 3.4);
insert into course_offering values('MAT223', 'InPerson', 'Fall', 2020, 2, 3, 3.4);
insert into course_offering values('MAT223', 'InPerson', 'Spring', 2021, 1, 3, 3.4);
insert into course_offering values('MAT223', 'InPerson', 'Spring', 2021, 2, 3, 3.4);
insert into course_offering values('MAT223', 'Online', 'Interim', 2021, 1, 3, 3.4);
insert into course_offering values('MAT241', 'InPerson', 'Fall', 2020, 1, 3, 3.4);
insert into course_offering values('MAT241', 'InPerson', 'Fall', 2020, 2, 3, 3.4);
insert into course_offering values('MAT241', 'InPerson', 'Spring', 2021, 1, 3, 3.4);
insert into course_offering values('MAT241', 'InPerson', 'Fall', 2020, 3, 3, 3.4);
insert into course_offering values('MAT330', 'InPerson', 'Spring', 2021, 1, 3, 3.4);
insert into course_offering values('MAT330', 'InPerson', 'Spring', 2021, 2, 3, 3.4);
insert into course_offering values('MAT376', 'InPerson', 'Fall', 2020, 1, 3, 3.4);
insert into course_offering values('MAT422', 'InPerson', 'Fall', 2020, 1, 4, 3.4);
insert into course_offering values('MAT422', 'InPerson', 'Fall', 2020, 2, 4, 3.4);
insert into course_offering values('MAT499', 'InPerson', 'Interim', 2021, 1, 3, 3.4);
insert into course_offering values('NIL000', 'Administrative', 'Fall', 2020, 1, NULL, 3);
insert into course_offering values('NIL000', 'Administrative', 'Spring', 2021, 1, NULL, 3);
insert into course_offering values('NIL000', 'Administrative', 'Fall', 2020, 2, NULL, 5);
insert into course_offering values('NIL000', 'Administrative', 'Spring', 2021, 2, NULL, 5);
insert into course_offering values('NIL000', 'Administrative', 'Fall', 2020, 3, NULL, 8);
insert into course_offering values('NIL000', 'Administrative', 'Spring', 2021, 3, NULL, 8);
insert into course_offering values('NIL000', 'Sabbatical', 'Fall', 2020, 1, NULL, 10);
insert into course_offering values('NIL000', 'Sabbatical', 'Interim', 2021, 1, NULL, 4);
insert into course_offering values('NIL000', 'Sabbatical', 'Spring', 2021, 1, NULL, 10);
insert into course_offering values('NIL000', 'Coaching', 'Fall', 2020, 1, NULL, 7);
insert into course_offering values('NIL000', 'Coaching', 'Interim', 2021, 1, NULL, 2);
insert into course_offering values('NIL000', 'Coaching', 'Spring', 2021, 1, NULL, 7);
